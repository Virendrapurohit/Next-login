import { Button, Checkbox, Form, Input, Modal, PopconfirmProps, Table, message } from 'antd';
import { useRef, useState } from 'react';
import Head from "next/head";
import { Divider, Row, Col, Popconfirm } from "antd";
import Image from 'next/image'
type FieldType = {
  username?: string;
  password?: string;
  remember?: boolean;
};
const Home = () => {
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [deleteIndex, setDeleteIndex] = useState<number | null>(null);
  const [formData, setFormData] = useState<FieldType[]>([]);
  const formRef = useRef<any>(null);

  const showModal = () => {
    setIsModalVisible(true);
  };

  const handleCancel = () => {
    setIsModalVisible(false);
  };

  const onFinish = (values: FieldType) => {
    setFormData([...formData, values]);
    console.log('Success:', values);
    formRef.current?.resetFields();
    setIsModalVisible(false);
  };

  const handleDelete = (index: number) => {
    setDeleteIndex(index);
  };

  const confirm: PopconfirmProps['onConfirm'] = (e) => {
    if (deleteIndex !== null) {
      setFormData(prevData => prevData.filter((_value, i) => i !== deleteIndex));
      setDeleteIndex(null);
    }
    console.log(e);
    message.success(' successfully');
  };

  const cancel: PopconfirmProps['onCancel'] = (e) => {
    console.log(e);
    message.error('Click on No');
  };
  const columns = [
    {
      title: 'Username',
      dataIndex: 'username',
      key: 'username',
    },
    {
      title: 'Password',
      dataIndex: 'password',
      key: 'password',
    },
    {
      title: 'Action',
      key: 'action',
      render: (_text: any, record: FieldType, index: number) => (
        <>
          <Popconfirm
            title="Delete the task"
            description="Are you sure to delete this task?"
            onConfirm={confirm}
            onCancel={cancel}
            okText="Yes"
            cancelText="No"
          >
            <Button danger onClick={() => handleDelete(index)}>Delete</Button>
          </Popconfirm>
        </>
      ),
    },
  ];
  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/Login.logo-removebg-preview.png" />
      </Head>
      <Row>
        <Col lg={24}>
          <nav style={{ backgroundColor: '#505860', padding: '16px 40px', textAlign: 'end', }}>
            <Image style={{ float: 'left', margin: '-8px 10px' }}
              src="/Login.logo-removebg-preview.png"
              width={55}
              height={50}
              alt="Picture of the author"
            />
            <Button type="primary" onClick={showModal}>Login</Button>
          </nav>
        </Col>
      </Row>
      <Modal
        title="Add User"
        visible={isModalVisible}
        onCancel={handleCancel}
        footer={null}
      >
        <Form
          name="basic"
          labelCol={{ span: 8 }}
          wrapperCol={{ span: 16 }}
          style={{ maxWidth: 600 }}
          initialValues={{ remember: true }}
          onFinish={onFinish}
          autoComplete="off"
          ref={formRef}
        >
          <Form.Item
            label="Username"
            name="username"
            rules={[{ required: true, message: 'required username!' }]}
          >
            <Input />
          </Form.Item>

          <Form.Item
            label="Password"
            name="password"
            rules={[{ required: true, message: 'required password!' }]}
          >
            <Input.Password />
          </Form.Item>

          <Form.Item
            name="remember"
            valuePropName="checked"
            wrapperCol={{ offset: 8, span: 16 }}
          >
            <Checkbox>Remember me</Checkbox>
          </Form.Item>
          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>
            <Button type="primary" htmlType="submit">
              Submit
            </Button>
          </Form.Item>
        </Form>
      </Modal>
      <Divider />
      <Table pagination={{ pageSize: 3 }} columns={columns} dataSource={formData} />
    </>
  );
};

export default Home;


